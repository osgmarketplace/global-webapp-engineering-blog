"use strict";(self.webpackChunkglobal_webapp_engineering_blog=self.webpackChunkglobal_webapp_engineering_blog||[]).push([[872],{25:function(e,t){t.Z=function(e){return"/global-webapp-engineering-blog/img/"+e}},1738:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return u},default:function(){return h}});var i=n(7462),o=n(3366),r=(n(7294),n(3905)),a=n(25),s=["components"],l={title:"Building Microservices - Book Review",description:"Designing Fine Grained Systems",tags:["architecture","book","learning"],author:"Derek Kershner",author_title:"CTO",author_url:"https://github.com/dkershner6",author_image_url:"https://avatars.githubusercontent.com/u/25798427?v=4"},c="Building Microservices",d={permalink:"/global-webapp-engineering-blog/2021/08/17/building-microservices-book",editUrl:"https://github.com/obfns/global-webapp-engineering-blog/tree/main/blog/2021-08-17-building-microservices-book.md",source:"@site/blog/2021-08-17-building-microservices-book.md",title:"Building Microservices - Book Review",description:"Designing Fine Grained Systems",date:"2021-08-17T00:00:00.000Z",formattedDate:"August 17, 2021",tags:[{label:"architecture",permalink:"/global-webapp-engineering-blog/tags/architecture"},{label:"book",permalink:"/global-webapp-engineering-blog/tags/book"},{label:"learning",permalink:"/global-webapp-engineering-blog/tags/learning"}],readingTime:1.385,truncated:!0,prevItem:{title:"Refactoring - Book Review",permalink:"/global-webapp-engineering-blog/2021/08/18/refactoring-book"},nextItem:{title:"React FAQ",permalink:"/global-webapp-engineering-blog/2021/08/16/react-faq"}},u=[{value:"TLDR",id:"tldr",children:[]},{value:"Why?",id:"why",children:[]},{value:"Who should read?",id:"who-should-read",children:[]},{value:"Important Concepts",id:"important-concepts",children:[{value:"Bounded Contexts and Seams",id:"bounded-contexts-and-seams",children:[]}]}],g={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"by Sam Newman"),(0,r.kt)("div",{style:{display:"flex",alignItems:"center",justifyContent:"center",width:"100%",overflow:"hidden"}},(0,r.kt)("img",{src:(0,a.Z)("building-microservices.jpg")})),(0,r.kt)("h2",{id:"tldr"},"TLDR"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This book aims to provide the basics on how and why to split systems into contexts."),(0,r.kt)("li",{parentName:"ul"},"It is a solid introduction and does a great job in going deeper, discussing tradeoffs in all areas, including testing, deployment, and monitoring."),(0,r.kt)("li",{parentName:"ul"},'If you remember nothing else, remember "bounded contexts" and "seams".')),(0,r.kt)("h2",{id:"why"},"Why?"),(0,r.kt)("p",null,"This book is great for those coming from Monolithic architectures (pretty much everyone, originally) and baby-stepping through the reasons why you may want to move services to a more micro level. It is definitely written from a pro-microservices standpoint, but refrains from being preachy."),(0,r.kt)("h2",{id:"who-should-read"},"Who should read?"),(0,r.kt)("p",null,"Generally the answer is everyone, but especially those more interested in the architecture career track as a basic starting point. Monolithic architectures have fallen out of style for all but the simplest applications, and for good reason. If you are unsure what these reasons are, this is a good first step."),(0,r.kt)("h2",{id:"important-concepts"},"Important Concepts"),(0,r.kt)("h3",{id:"bounded-contexts-and-seams"},"Bounded Contexts and Seams"),(0,r.kt)("p",null,"These are the bread and butter of microservices, and are almost solely responsible for if a microservice is going to succeed or fail miserably. Watch closely when these things are mentioned throughout the book, but here is a quick synopsis anyway:"),(0,r.kt)("p",null,'Seams are the lines which are drawn being (micro)services, creating contexts. If the seam is in a good location, it creates a bounded context, which is loosely defined as a collection of concepts that heavily relate to one another. I usually see this referred to as "domain".'))}h.isMDXComponent=!0}}]);